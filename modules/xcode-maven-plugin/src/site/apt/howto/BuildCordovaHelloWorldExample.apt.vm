~~~
~~ #%L
~~ xcode-maven-plugin
~~ %%
~~ Copyright (C) 2012 SAP AG
~~ %%
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~ 
~~      http://www.apache.org/licenses/LICENSE-2.0
~~ 
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~ #L%
~~~
 
 ------
 Usage
 ------
 ------
 2012-11-28
 ------

How to build the Cordova HelloWorld ExampleProject

* Purpose of this page
 
   This page explains how the {{{http://cordova.apache.org/docs/en/2.6.0/guide_getting-started_ios_index.md.html}HelloWorld project}} provided on the Cordova homepage can be built with the xcode-maven-plugin.

* The big picture

   Within the HelloWorld example provided on the Cordova homepage the CordovaLib project is embedded as source code into the HelloWorld project. The xcode-maven-plugin uses the dependency resolution mechanism provided by maven. With this approach there is no need for including dependent project on the level of the source code. Instead the dependent projects are built in there own cycle and consumed afterwards without there source code based project. This means: first we build the CordovaLib using the xcode-maven-plugin. As the result of that step the headers and the compiles library representing the CordovaLib are exposed in a binary repository.  After that we build the HelloWorld project. The HelloWorld project declares a depenency to the CordovaLib on the level of the maven project. Before the HelloWorld project is compiled the headers and the binary representing the CordovaLib are materialized into the HelloWorldProject. In order to get this working we need to adjust the header search path and the library search path accordingly.
      
* How it works

   Unzip the {{{./BuildCordovaWithMaven.zip}attached zip file}} in an arbitrary folder, cd into the bin directory and run <<<./all.sh>>>.

   If you are behind a firewall adjust the HTTP_PROXY in file <<<bin/prepareCordova.sh>>>.

   This shell script 

   * downloads the {{{http://www.apache.org/dist/cordova/cordova-2.6.0-src.zip}Cordova sources v2.6.0}}.

   * mavenizes the CordovaLib project.

   * builds the CordovaLib project with maven.

   * creates the HelloWorld project as described {{{http://cordova.apache.org/docs/en/2.6.0/guide_getting-started_ios_index.md.html#Getting%20Started%20with%20iOS_project_creation}here}}

   * mavenizes the HelloWorld project. During this step the embedded CordovaLib project is removed.

   * Builds the HelloWorld project with maven.

